--- CRIACAO DE TABELAS--


---CRIAÇÃO TABELAS USUARIO---
CREATE TABLE USUARIO
( ID INT IDENTITY (1,1) NOT NULL ,
  L_LOGIN VARCHAR(255) UNIQUE NOT NULL,
  SENHA VARCHAR(50) NOT NULL,
  DTEXPIRACAO DATETIME NOT NULL DEFAULT('1900/01/01'),

  CONSTRAINT PK_ID_USUARIO PRIMARY KEY(ID),
);


-- CRIA��O TABELA COORDENADOR---
CREATE TABLE COORDENADOR
(	ID INT IDENTITY(1,1) NOT NULL,
	ID_USUARIO INT NOT NULL,
	NOME VARCHAR(255) NOT NULL,
	EMAIL VARCHAR(255) UNIQUE NOT NULL,
	CELULAR VARCHAR(20) UNIQUE NOT NULL,

	CONSTRAINT PK_ID_COORDENADOR PRIMARY KEY (ID)

);
--CRIA��O DE ALUNO --
CREATE TABLE ALUNO(
	ID INT IDENTITY  (1,1) PRIMARY KEY NOT NULL , --PRIMARY KEY INCLUSO--
	NOME VARCHAR (50) NOT NULL ,
	EMAIL VARCHAR (30) UNIQUE NOT NULL,
	CELULAR VARCHAR(15) UNIQUE NOT NULL,
	RA VARCHAR (10) UNIQUE NOT NULL,
	FOTO VARCHAR(500),
	
);
-- CRIA��O DE PROFESSOR--
CREATE TABLE PROFESSOR(
	ID INT IDENTITY (1,1) PRIMARY KEY NOT NULL, --PRIMARY KEY INCLUSO--
	EMAIL VARCHAR (30) UNIQUE NOT NULL,
	CELULAR VARCHAR(15) UNIQUE NOT NULL,
	APELIDO VARCHAR (20) NOT NULL,
	
);

CREATE TABLE DISCIPLINA (
	ID INT IDENTITY NOT NULL,
	NOME VARCHAR(100) NOT NULL,
	DATA DATETIME NOT NULL DEFAULT (GETDATE()),
	STATUS VARCHAR(7) NOT NULL DEFAULT ('Aberta'),
	PLANODEENSINO VARCHAR(50) NOT NULL, -- PRECISAVA TER MAIS DE 500
	CARGAHORARIA TINYINT NOT NULL,
	COMPETENCIAS VARCHAR(100) NOT NULL,-- PRECISAVA TER MAIS DE 500
	HABILIDADES VARCHAR(100) NOT NULL, -- PRECISAVA TER MAIS DE 500
	EMENTA VARCHAR(100) NOT NULL, -- PRECISAVA TER MAIS DE 500
	CONTEUDOPROGRAMATICO VARCHAR(1000) NOT NULL,
	BIBLIOGRAFICABASICA VARCHAR(1000) NOT NULL,
	BIBLIOGRAFIACOMPLEMENTAR VARCHAR(1000) NOT NULL,
	PERCENTUALPRATICO TINYINT NOT NULL,
	PERCENTUALTEORICO TINYINT NOT NULL,
	IDCOORDENADOR INT NOT NULL,
	
	CONSTRAINT PK_DISCIPLINA PRIMARY KEY(ID),
	CONSTRAINT FK_DISCIPLINA_COORDENADOR FOREIGN KEY (IDCOORDENADOR)
		REFERENCES Coordenador (ID),
	CONSTRAINT CK_DISCIPLINA_CARGAHORARIA CHECK (CARGAHORARIA IN (40, 80)),
	CONSTRAINT CK_DISCIPLINA_PERCENTUALPRATICO CHECK (PERCENTUALPRATICO BETWEEN 0 AND 100),
	CONSTRAINT CK_DISCIPLINA_PERCENTUALTEORICO CHECK (PERCENTUALTEORICO BETWEEN 0 AND 100),
	CONSTRAINT CK_DISCIPLINA_STATUS CHECK (STATUS IN ('Aberta', 'Fechada')),
	--CONSTRAINT DF_DISCIPLINA_STATUS DEFAULT ('Aberta') FOR STATUS,
	--CONSTRAINT DF_DISCIPLINA_DATA DEFAULT (GETDATE()) FOR DATA,
	CONSTRAINT UQ_DISCIPLINA_NOME UNIQUE (NOME)

);


CREATE TABLE CURSO
(
	ID INT IDENTITY,--(PK)
	NOME VARCHAR (200) NOT NULL,--(UQ)
	CONSTRAINT PK_ID_CURSO PRIMARY KEY (ID) --FALTOU CRIAR UNIQUE
);

CREATE TABLE DISCIPLINAOFERTADA (
	ID INT IDENTITY NOT NULL,
	IDCOORDENADOR INT NOT NULL,
	DTINICIOMATRICULA DATE,
	DTFIMMATRICULA DATE,
	IDDISCIPLINA INT NOT NULL,
	IDCURSO INT NOT NULL,
	ANO SMALLINT NOT NULL,
	SEMESTRE TINYINT NOT NULL,
	TURMA CHAR(1) NOT NULL,
	IDPROFESSOR INT,
	METODOLOGIA VARCHAR(1000),
	RECURSOS VARCHAR(1000),
	CRITERIOAVALIACAO VARCHAR(1000),
	PLANODEAULAS VARCHAR(1000),
	
	CONSTRAINT PK_DISCIPLINAOFERTADA PRIMARY KEY(ID),
	CONSTRAINT FK_DISCIPLINAOFERTADA_COORDENADOR FOREIGN KEY (IDCOORDENADOR)
		REFERENCES Coordenador (ID),
	CONSTRAINT FK_DISCIPLINAOFERTADA_DISCIPLINA FOREIGN KEY (IDDISCIPLINA)
	REFERENCES Disciplina (ID),
	CONSTRAINT FK_DISCIPLINAOFERTADA_CURSO FOREIGN KEY (IDCURSO)
		REFERENCES Curso (ID),
	--CONSTRAINT FK_DISCIPLINAOFERTADA_PROFESSOR FOREIGN KEY (IDPROFESSOR)
	--REFERENCES Professor (ID),
	CONSTRAINT CK_DISCIPLINAOFERTADA_ANO CHECK(ANO BETWEEN 1900 AND 2100),
	CONSTRAINT CK_DISCIPLINAOFERTADA_SEMESTRE CHECK(SEMESTRE IN (1,2)),
	CONSTRAINT CK_DISCIPLINAOFERTADA_TURMA CHECK (TURMA >= 'A' AND TURMA <= 'Z'),
	CONSTRAINT UQ_DISCIPLINAOFERTADA_CURSO_ANO_SEMESTRE_TURMA UNIQUE (IDCURSO, ANO, SEMESTRE, TURMA) -- FAlTOU IDDISCIPLINA
);


CREATE TABLE SOLICITACAO_MATRICULA
(
	ID INT IDENTITY,--(PK)
	ID_ALUNO INT NOT NULL,--(FK)
	ID_DISCIPLINA_OFERTADA INT NOT NULL,--(FK)
	ID_SOLICITACAO DATETIME NOT NULL DEFAULT GETDATE(),--(DF)
	ID_COORDENADOR INT,--(FK)
	STATUS CHAR(20) DEFAULT 'Solicitado',--(DF,CK) VERIFICAR O CHAR
	CONSTRAINT PK_ID_SOLICITACAO_MATRICULA PRIMARY KEY (ID),
	CONSTRAINT FK_ID_SOLICITACAO_MATRICULA FOREIGN KEY (ID_ALUNO) REFERENCES ALUNO (ID),
	CONSTRAINT FK_ID_SOLICITACAO_MATRICULA_DISCIPLINA_OFERTADA FOREIGN KEY (ID_DISCIPLINA_OFERTADA) REFERENCES DISCIPLINAOFERTADA (ID),
	CONSTRAINT FK_ID_SOLICITACAO_MATRICULA_COORDENADOR FOREIGN KEY (ID_COORDENADOR) REFERENCES COORDENADOR (ID),
	CONSTRAINT CK_STATUS_SOLICITACAO_MATRICULA CHECK (STATUS IN ('Solicitada','Aprovada','Rejeitada','Cancelada'))
);

CREATE TABLE ATIVIDADES
(
    ID INT IDENTITY,
    TITULO CHAR(50) NOT NULL, --CHAR ??
    DESCRICAO VARCHAR(200),
    CONTEUDO VARCHAR(150) NOT NULL,
    TIPO CHAR(20) NOT NULL, --CHAR ??
    EXTRAS CHAR(50), --CHAR ??
    ID_PROFESSOR INT NOT NULL,

    CONSTRAINT PK_ID_ATIVIDADES PRIMARY KEY(ID),
    CONSTRAINT UQ_TITULO UNIQUE(TITULO),
    CONSTRAINT CK_TIPO CHECK(TIPO IN ('Resposta Aberta','Teste')),
    CONSTRAINT FK_ID_PROFESSOR_ATIVIDADES FOREIGN KEY(ID_PROFESSOR) REFERENCES PROFESSOR(ID)
);

CREATE TABLE ATIVIDADE_VINCULADA
(
    ID INT IDENTITY,
    ID_ATIVIDADE INT NOT NULL,
    ID_PROFESSOR INT NOT NULL,
    ID_DICIPLINA_OFERTADA INT NOT NULL,
    ROTULO CHAR(10) NOT NULL, --CHAR ??
    STATUS CHAR(20) NOT NULL, --CHAR ??
    DT_INICIO_RESPOSTAS DATETIME NOT NULL,
    DT_FIM_RESPOSTAS DATETIME NOT NULL,

    CONSTRAINT PK_ID_ATIVIDADE_VINCULADA PRIMARY KEY(ID),
    CONSTRAINT FK_ID_ATIVIDADE FOREIGN KEY(ID_ATIVIDADE) REFERENCES ATIVIDADES(ID),
    CONSTRAINT FK_ID_PROFESSOR_ATIVIDADE_VINCULADA FOREIGN KEY(ID_PROFESSOR) REFERENCES PROFESSOR(ID),
    CONSTRAINT FK_ID_DICIPLINA_OFERTADA FOREIGN KEY(ID_DICIPLINA_OFERTADA) REFERENCES DISCIPLINAOFERTADA(ID),
    CONSTRAINT UQ_ROTULO_ID_ATIVIDADE_DICIPLINA_OFERTADA UNIQUE(ID_ATIVIDADE,ID_DICIPLINA_OFERTADA,ROTULO),
    CONSTRAINT CK_STATUS CHECK(STATUS IN ('Disponibilizada','Aberta','Fechada','Encerrada','Prorrogada'))
);

-- Criando Tabela Entrega --
CREATE TABLE ENTREGA
(
	ID	INT IDENTITY (1,1) NOT NULL,
	IDALUNO INT NOT NULL,
	IDATIVIDADEVINCULADA INT  NOT NULL,
	TITULO VARCHAR(200) NOT NULL,--???
	RESPOSTA CHAR(1000) NOT NULL,--????
	DTENTREGA DATETIME NOT NULL  DEFAULT(GETDATE()),
	STATUS VARCHAR(50) NOT NULL DEFAULT('ENTREGUE'),
	IDPROFESSOR INT,
	NOTA NUMERIC(10,2), --????
	DTAVALIACAO	DATETIME,
	OBS CHAR(500), --CHAR ??

	CONSTRAINT PK_ENTREGA PRIMARY KEY(ID),
	--CONSTRAINT DF_DTENTREGA DEFAULT(GETDATE()) FOR DTENTREGA,
	--CONSTRAINT DF_STATUS DEFAULT('ENTREGUE') FOR STATUS,
	CONSTRAINT CK_CKSTATUS
				CHECK(STATUS IN ('ENTREGUE','CORRIGIDO')),
	CONSTRAINT CK_CKNOTA
				CHECK(NOTA >= 0 AND NOTA <= 10),
	CONSTRAINT FK_ENTREGA_ALUNO FOREIGN KEY (IDALUNO) REFERENCES ALUNO(ID),
	CONSTRAINT FK_ATIVIDADEVINCULADA_ALUNO FOREIGN KEY (IDATIVIDADEVINCULADA) REFERENCES ATIVIDADE_VINCULADA (ID),
	CONSTRAINT FK_PROFESSOR_ALUNO FOREIGN KEY (IDPROFESSOR) REFERENCES PROFESSOR (ID)
);

	-- Criando Tabela Mensagem--
CREATE TABLE MENSAGEM(
	ID	INT IDENTITY (1,1) NOT NULL,
	IDALUNO	INT  NOT NULL,
	IDPROFESSOR	INT  NOT NULL,
	ASSUNTO	VARCHAR(100) NOT NULL,
	REFERENCIA CHAR(1000) NOT NULL, -- CHAR ???
	CONTEUDO VARCHAR(200) NOT NULL,
	STATUS VARCHAR(50) NOT NULL DEFAULT('ENVIADO'),
	DTENVIO DATETIME NOT NULL DEFAULT(GETDATE()),
	DTRESPOSTA	DATETIME,
	RESPOSTA CHAR(500),

	--CONSTRAINT DF_STATUS DEFAULT('ENVIADO') FOR STATUS,
	CONSTRAINT PK_MENSAGEM PRIMARY KEY (ID),
	CONSTRAINT CK_CKSTATUS1
				CHECK(STATUS IN ('ENVIADO','LIDO','RESPONDIDO')),
	CONSTRAINT FK_MENSAGEM_IDALUNO FOREIGN KEY (IDALUNO) REFERENCES ALUNO (ID),
	CONSTRAINT FK_MENSAGEM_IDPROFESSOR FOREIGN KEY (IDPROFESSOR) REFERENCES PROFESSOR (ID)
	
);


ALTER TABLE COORDENADOR ADD
	CONSTRAINT FK_COORDENADOR_IDUSUARIO FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID)

ALTER TABLE ALUNO ADD
	CONSTRAINT FK_ALUNO_IDUSUARIO FOREIGN KEY(ID) REFERENCES USUARIO(ID)

ALTER TABLE ALUNO
	ALTER COLUMN ID_USUARIO INT NOT NULL

ALTER TABLE PROFESSOR
	ADD ID_USUARIO INT NOT NULL

ALTER TABLE PROFESSOR ADD
	CONSTRAINT FK_PROFESSOR_IDUSUARIO FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID)